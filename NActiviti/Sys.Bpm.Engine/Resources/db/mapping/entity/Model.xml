<?xml version="1.0" encoding="UTF-8" ?>

<SmartSqlMap Scope="Sys.Workflow.Engine.Impl.Persistence.Entity.ModelEntityImpl"  xmlns="http://SmartSql.net/schemas/SmartSqlMap.xsd">

  <!-- MODEL RESULTMAP -->
    
    <ResultMap Id="modelResultMap" ResultType="Sys.Workflow.Engine.Impl.Persistence.Entity.ModelEntityImpl,Sys.Bpm.Engine" >
      <Result Property="id" Column="ID_" />
      <Result Property="revision" Column="REV_" />
      <Result Property="name" Column="NAME_" />
      <Result Property="key" Column="KEY_" />
      <Result Property="category" Column="CATEGORY_" />
      <Result Property="createTime" Column="CREATE_TIME_" />
      <Result Property="lastUpdateTime" Column="LAST_UPDATE_TIME_" />
      <Result Property="version" Column="VERSION_" />
      <Result Property="metaInfo" Column="META_INFO_" />
      <Result Property="deploymentId" Column="DEPLOYMENT_ID_" />
      <Result Property="editorSourceValueId" Column="EDITOR_SOURCE_VALUE_ID_" />
      <Result Property="editorSourceExtraValueId" Column="EDITOR_SOURCE_EXTRA_VALUE_ID_" />
      <Result Property="tenantId" Column="TENANT_ID_" />
    </ResultMap>

  <!-- MODEL INSERT -->
    
    <Insert Type="Insert" Id="insertModel">
      insert into ACT_RE_MODEL(ID_, REV_, NAME_, KEY_, CATEGORY_, CREATE_TIME_, LAST_UPDATE_TIME_, VERSION_, META_INFO_, DEPLOYMENT_ID_, EDITOR_SOURCE_VALUE_ID_, EDITOR_SOURCE_EXTRA_VALUE_ID_, TENANT_ID_)
      values(#{id},
      1,
      #{name},
      #{key},
      #{category},
      #{createTime},
      #{lastUpdateTime},
      #{version},
      #{metaInfo},
      #{deploymentId},
      #{editorSourceValueId},
      #{editorSourceExtraValueId},
      #{tenantId})
    </Insert>

    <Insert Id="bulkInsertModel">
      INSERT INTO ACT_RE_MODEL(ID_, REV_, NAME_, KEY_, CATEGORY_, CREATE_TIME_, LAST_UPDATE_TIME_, VERSION_, META_INFO_, DEPLOYMENT_ID_, EDITOR_SOURCE_VALUE_ID_, EDITOR_SOURCE_EXTRA_VALUE_ID_, TENANT_ID_)
      VALUES
      <For Prepend="" Key="p" Open="" Close="" Property="Items" Separator=",">
        (#{id},
        1,
        #{name},
        #{key},
        #{category},
        #{createTime},
        #{lastUpdateTime},
        #{version},
        #{metaInfo},
        #{deploymentId},
        #{editorSourceValueId},
        #{editorSourceExtraValueId},
        #{tenantId})
      </For>
    </Insert>

    <!-- MODEL UPDATE -->
    <Update Id="updateModel">
      update ACT_RE_MODEL set
      REV_ = #{revisionNext},
      NAME_ = #{name},
      KEY_ = #{key},
      CATEGORY_ = #{category},
      LAST_UPDATE_TIME_ = #{lastUpdateTime},
      VERSION_ = #{version},
      META_INFO_ = #{metaInfo},
      DEPLOYMENT_ID_ = #{deploymentId},
      EDITOR_SOURCE_VALUE_ID_ = #{editorSourceValueId},
      EDITOR_SOURCE_EXTRA_VALUE_ID_ = #{editorSourceExtraValueId},
      TENANT_ID_ = #{tenantId}
      where ID_ = #{id} and REV_ = #{revision}
    </Update>


    <!-- MODEL DELETE -->

    <Delete Id="deleteModel">
      delete from ACT_RE_MODEL where ID_ = #{id} and REV_ = #{revision}
    </Delete>


    <!-- MODEL SELECT -->

    <Statement Id="selectModelsByQueryCriteriaSql">
      from ACT_RE_MODEL RES
      <Where>
        <IsTrue Property="id != null">
          RES.ID_ = #{id}
        </IsTrue>
        <IsTrue Property="name != null">
          and RES.NAME_ = #{name}
        </IsTrue>
        <IsTrue Property="nameLike != null">
          and RES.NAME_ like #{nameLike}${wildcardEscapeClause}
        </IsTrue>
        <IsTrue Property="key != null">
          and RES.KEY_ = #{key}
        </IsTrue>
        <IsTrue Property="category != null">
          and RES.CATEGORY_ = #{category}
        </IsTrue>
        <IsTrue Property="categoryLike != null">
          and RES.CATEGORY_ like #{categoryLike}${wildcardEscapeClause}
        </IsTrue>
        <IsTrue Property="categoryNotEquals != null">
          and ( RES.CATEGORY_ &lt;&gt; #{categoryNotEquals} OR RES.CATEGORY_ is null )
        </IsTrue>
        <IsTrue Property="version != null">
          and RES.VERSION_ = #{version}
        </IsTrue>
        <IsTrue Property="deploymentId != null">
          and RES.DEPLOYMENT_ID_ = #{deploymentId}
        </IsTrue>
        <IsTrue Property="notDeployed">
          and RES.DEPLOYMENT_ID_ is null
        </IsTrue>
        <IsTrue Property="deployed">
          and RES.DEPLOYMENT_ID_ is not null
        </IsTrue>
        <IsTrue Property="latest">
          and RES.VERSION_ = (select max(VERSION_) from ACT_RE_MODEL where KEY_ = RES.KEY_)
        </IsTrue>
        <IsTrue Property="tenantId != null">
          and RES.TENANT_ID_ = #{tenantId}
        </IsTrue>
        <IsTrue Property="tenantIdLike != null">
          and RES.TENANT_ID_ like #{tenantIdLike}${wildcardEscapeClause}
        </IsTrue>
        <IsTrue Property="withoutTenantId">
          and (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)
        </IsTrue>
      </Where>
    </Statement>

    <Select Id="selectModelsByQueryCriteria" ResultMap="modelResultMap">
      ${limitBefore}
      select distinct ${top100} RES.* ${limitBetween}
      <Include RefId="selectModelsByQueryCriteriaSql"/>
      ${orderBy}
      ${limitAfter}
    </Select>

    <Select Id="selectModelCountByQueryCriteria" >
      select count(distinct RES.ID_)
      <Include RefId="selectModelsByQueryCriteriaSql"/>
    </Select>

    <Select Id="selectModel" ResultMap="modelResultMap">
      select * from ACT_RE_MODEL where ID_ = #{id}
    </Select>

    <!-- mysql specific -->
    <Select Id="selectModelCountByQueryCriteria_mysql" >
      select distinct count(RES.ID_)
      <Include RefId="selectModelsByQueryCriteriaSql"/>
    </Select>

    <Select Id="selectModelByNativeQuery" ResultMap="modelResultMap">
      <IsEqual Property="resultType" CompareValue="LIST_PAGE">
        ${limitBefore}
      </IsEqual>
      ${sql}
      <IsEqual Property="resultType" CompareValue="LIST_PAGE">
        ${limitAfter}
      </IsEqual>
    </Select>

    <Select Id="selectModelCountByNativeQuery" >
      ${sql}
    </Select>
</SmartSqlMap>